package de.recuti;

import java.util.Timer;
import java.util.TimerTask;

import de.recuti.util.SystemUiHider;

import android.app.Activity;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;

/**
 * An example full-screen activity that shows and hides the system UI (i.e.
 * status bar and navigation/system bar) with user interaction.
 *
 * @see SystemUiHider
 */
public class MainActivity extends Activity {
	
	private class ChronoMinSec {
		private EditText text;
		private int min, sec;
		
		public void setMin(int min) {
			this.min = min;
			text.setText(String.format("%02d:%02d", min, sec));
		}
		
		public void setSec(int sec) {
			this.sec = sec;
			text.setText(String.format("%02d:%02d", min, sec));
		}
		
		public ChronoMinSec(EditText text, int min, int sec) {
			this.text = text;
			this.min = min;
			this.sec = sec;
			
			text.setText(String.format("%02d:%02d", min, sec));
			
			text.addTextChangedListener(new TextWatcher () {

	        	private CharSequence old = ChronoMinSec.this.text.getText();
	        	private int colons = 1;
	        	
				@Override
				public void afterTextChanged(Editable s) {
					if(MainActivity.this.countDown)
						return;
					
					if(!old.toString().equals(s.toString())) {
						s.replace(0, s.length(), old);
					}
				}
	
				@Override
				public void beforeTextChanged(CharSequence s, int start, int count,
						int after) {
				}
	
				@Override
				public void onTextChanged(CharSequence s, int start, int before, int count) {
					if(MainActivity.this.countDown)
						return;
					
					colons = 0;
					for(int i = 0; i < s.length(); i++) {
						if(s.charAt(i) == ':') {
							if(++colons >= 2) {
								colons = 1;
								return;
							}
						}
					}
					String[] tok = s.toString().split(":");
					if(s.length() == 0) {
						
					}
					else if(tok.length == 1) {
						try {
							ChronoMinSec.this.min = Integer.parseInt(tok[0]);
						} catch (NumberFormatException e) {
							return;
						}
						ChronoMinSec.this.sec = 0;
					}
					else if(tok.length == 2) {
						try {
							ChronoMinSec.this.min = Integer.parseInt(tok[0]);
							ChronoMinSec.this.sec = Integer.parseInt(tok[1]);
						} catch (NumberFormatException e) {
							return;
						}
						if(ChronoMinSec.this.sec >= 60) {
							return;
						}
					}
					else {
						return;
					}
					old = s.toString();
				}
	        	
	        });
		}
	}

	private ChronoMinSec mainChrono;
	private ChronoMinSec subChrono1;
	private ChronoMinSec subChrono2;
	
	private Button button;
	
	private Timer timer;
	private boolean countDown = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
    	super.onCreate(savedInstanceState);

        setContentView(R.layout.activity_main);

        mainChrono = new ChronoMinSec((EditText) findViewById(R.id.editText1), 36, 0);
        subChrono1 = new ChronoMinSec((EditText) findViewById(R.id.editText2), 2, 0);
        subChrono2 = new ChronoMinSec((EditText) findViewById(R.id.editText3), 1, 0);
        button = (Button) findViewById(R.id.button1);
        
        
        button.setOnClickListener(new OnClickListener() {
			private boolean countingDown = false;
			
			@Override
			public void onClick(View v) {
				if(countingDown) {
					button.setText("Start");
					countingDown = false;
					timer.cancel();
					timer = null;
				} else {
					button.setText("Stop");
					mainChrono.text.setText(String.format("%02d:%02d", mainChrono.min, mainChrono.sec));
					timer = new Timer(true);
					timer.schedule(new TimerTask() {
	
						@Override
						public void run() {
							runOnUiThread(new Runnable() {
								@Override
								public void run() {
									mainSec--;
									if(mainSec == 0 && mainMin == 0) {
										timer.cancel();
										countingDown = false;
										timer = null;
										button.setText("Start");
										// play sound
									}
									else if(mainSec < 0) {
										mainSec = 59;
										mainMin--;
									}
									
									mainChrono.setText(String.format("%02d:%02d", mainMin, mainSec));
								}
							});
						}
					}, 1000, 1000);
					countingDown = true;
				}
			}
		});
        
    }

    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);

    }

}
